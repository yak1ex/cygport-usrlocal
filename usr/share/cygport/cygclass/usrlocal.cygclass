# for general variables

if defined USRLOCAL; then
    prefix=/usr/local
    prefix_=usr/local
    mandir=/usr/local/man
    sysconfdir=/usr/local/etc
    export PATH="/usr/local/bin:$PATH"
else
    prefix=/usr
    prefix_=usr
    mandir=/usr/share/man
    sysconfdir=/etc
    export PATH="/usr/bin:$PATH"
fi

# for handling variant prefix/suffix

PN_=${PN%_*}
PN_=${PN_#cygwin-}
PN_=${PN_#mingw-}
if test ${PN} != ${PN_}; then
  _PN=_${PN#*_}
fi
case $PN in
cygwin-*) PN__=cygwin-;;
mingw-*) PN__=mingw-;;
esac
P_=${PN_}-${PV}

mycygconf() {
    local newoption
    if defined USRLOCAL; then
        case $OLD_CONFIGURE in
        [Yy][Ee][Ss])
            newoption=
            ;;
        *)
            newoption="--docdir=/usr/local/share/doc/${P} --datarootdir=/usr/local/share"
            ;;
        esac
        cygconf --prefix=/usr/local --exec-prefix=/usr/local \
                --bindir=/usr/local/bin --sbindir=/usr/local/sbin \
                --libexecdir=/usr/local/libexec --localstatedir=/var \
                --sysconfdir=/usr/local/etc \
                --datadir=/usr/local/share --infodir=/usr/local/info \
                --mandir=/usr/local/man \
                $newoption \
                "${@}"
    else
        cygconf "${@}"
    fi
}

src_compile() {
    cd ${S}
    cygautoreconf
    cd ${B}
    mycygconf
    cygmake
}

mycyginstall() {
    if defined USRLOCAL; then
        case ${USE_DESTDIR:-1} in
            1|[Yy]|[Yy][Ee][Ss])
                make ${MAKEOPTS} install DESTDIR=${D} "${@}" || error "make install DESTDIR failed"
                ;;
            0|[Nn]|[Nn][Oo])
                make ${MAKEOPTS} install \
                    prefix=${D}/usr/local \
                    bindir=${D}/usr/local/bin/ \
                    includedir=${D}/usr/local/include \
                    libdir=${D}/usr/local/lib \
                    sbindir=${D}/usr/local/sbin \
                    libexecdir=${D}/usr/local/libexec \
                    datadir=${D}/usr/local/share \
                    infodir=${D}/usr/local/info \
                    mandir=${D}/usr/local/man \
                    localstatedir=${D}/var \
                    sysconfdir=${D}/usr/local/etc \
                    "${@}" \
                    || error "make install No-DESTDIR failed"
                ;;
            *)
                error "USE_DESTDIR should be set to either 0 or 1 (default).";
                ;;
        esac
    else
        cyginstall "${@}"
    fi
}

__myprepman() {
    local manpage;

    if [ -d ${D}/usr/local/man ]
    then
        echo "Compressing man pages:";

        for manpage in $(find ${D}/usr/local/man -type f ! -name '*.gz' ! -name '*.bz2')
        do
            echo "        ${manpage##*/}";
            gzip -q ${manpage};
        done
    fi
}

__myprepetc() {
    # GNU info pages
    if [ -d ${D}/usr/local/info ]
    then
            prep_gnu_info_usrlocal.sh || error "GNU info postinstall failed"
    fi
}

src_install() {
    cd ${B}
    mycyginstall
    __myprepetc && __myprepman
}

mydodoc() {
	case "${_docinto_dir}" in
		'')	docdir=${prefix}/share/doc/${PN} ;;
		/*)	docdir=${prefix}/share/doc${_docinto_dir} ;;
		*)	docdir=${prefix}/share/doc/${PN}/${_docinto_dir} ;;
	esac

	dodir ${docdir}

	for i
	do
		if [ -f ${i} -o -L ${i} ]
		then
			if [ "x$(file -b ${i})" != "xempty" -a ! -f ${D}${docdir}/${i} ]
			then
				__doinstall 0644 ${i} ${docdir} || error "dodoc ${i} failed"
			fi
		elif [ -f ${i}.txt -o -L ${i}.txt ]
		then
			if [ "x$(file -b ${i}.txt)" != "xempty" -a ! -f ${D}${docdir}/${i}.txt ]
			then
				__doinstall 0644 ${i}.txt ${docdir} || error "dodoc ${i}.txt failed"
			fi
		fi
	done
}

__myprep_libtool_modules() {
	local ltlibs ltlibdir ltlibname ltversion
	local dlname origdlname library_names old_library inherited_linker_flags \
	      dependency_libs weak_library_names current age revision \
		  installed shouldnotlink dlopen dlpreopen libdir

	pushd ${D}

	ltlibs="$(find * -name '*.la')"

	if ! defined ltlibs
	then
		# nothing to do
		return 0
	fi

	echo "Fixing libtool modules:"

	ltversion="$(grep '^# libtool (GNU' /usr/bin/libtool | cut -d ' ' -f 2-)"

	for lib_la in ${ltlibs}
	do
		# check that the file is actually a libtool library
		# e.g. xmodmap.la, where 'la' is a language code
		if ! grep -q "libtool library file" ${lib_la}
		then
			continue
		fi

		source ${lib_la}

		ltlibdir=${lib_la%/*}

		# check that all library members were installed
		for l in dlname library_names old_library
		do
			if defined ${l} && [ ! -f ${ltlibdir}/${!l} ]
			then
				error "${!l} was not installed"
			fi
		done

		if [ "x${shouldnotlink}" != "xyes" ]
		then
			origdlname=${dlname}
			while [ $(realpath ${ltlibdir}/${dlname%/bin/*}) != ${D}${prefix} ]
			do
				dlname=../${dlname}
			done
			if [ ${dlname} != ${origdlname} ]
			then
				pushd ${ltlibdir}
				mkdir -p ${dlname%/*}
				mv ${origdlname} ${dlname}
				popd
				echo "        ${lib_la}"
				sed -i -e "s|^\(dlname=\).*|\1'${dlname}'|" ${lib_la}
			fi

			# The rest only applies if shouldnotlink=yes (-module)
			continue
		fi

		echo "        ${lib_la}"

		ltlibname=${lib_la##*/}
		ltlibname=${ltlibname%.la}

		if [ "x${dlname}" = "x" ]
		then
			error "${ltlibname}.la dynamic module was not built"
		fi

		# warn if -avoid-version was not used with -module
		# 99.9% of time should be, but there are notable exceptions
		case "${dlname#../bin/}" in
			cyg${ltlibname#lib}.dll|${ltlibname}.dll)	;;
			cyg${ltlibname#lib}.so|${ltlibname}.so)		;;
			*)	warning "${ltlibname}.la appears to be a versioned module." ;;
		esac

		# static and import libraries are pointless for modules
		rm -f ${ltlibdir}/${ltlibname}.a ${ltlibdir}/${ltlibname}.dll.a

		cat > ${lib_la} <<-_EOF
			# ${ltlibname}.la - a libtool library file
			# Generated by ${ltversion}
			# Modified by cygport
			#
			# Please DO NOT delete this file!
			# It is necessary for linking the library.

			# The name that we can dlopen(3).
			dlname='${dlname}'

			# Names of this library.
			library_names='${dlname}'

			# The name of the static archive.
			old_library=''

			# Linker flags that can not go in dependency_libs.
			inherited_linker_flags='${inherited_linker_flags}'

			# Libraries that this one depends upon.
			# This is set to empty to speed up lt_dlopen and friends.
			dependency_libs=''

			# Names of additional weak libraries provided by this library
			weak_library_names='${weak_library_names}'

			# Version information for ${ltlibname}.
			current=${current}
			age=${age}
			revision=${revision}

			# Is this an already installed library?
			installed=yes

			# Should we warn about portability when linking against -modules?
			shouldnotlink=yes

			# Files to dlopen/dlpreopen
			dlopen='${dlopen}'
			dlpreopen='${dlpreopen}'

			# Directory that this library needs to be installed in:
			libdir='${libdir}'
			_EOF
	done

	popd
}

__mysrc_postinst() {
	__prepdoc;
	__prep_symlinks;
	__prepetc;
	__prepman;
	__prepinfo;
	__prepvargames;
	__myprep_libtool_modules;
	__prepstrip;
	__prepuac;
	__prep_empty_dirs;
}

alias __src_postinst=__mysrc_postinst
# Clear aliases to prevent unintended replacement
eval `alias | sed -e '/__my/d;s/^/un/;s/=.*/;/'`
shopt -s expand_aliases
